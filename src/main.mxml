<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:utils="cc.varga.utils.*"
					   frameRate="200"
					   width="1024" height="768"
					   showStatusBar="false"
					   title="Google Wave Client"
					   creationComplete="windowedapplication1_creationCompleteHandler(event)" 
					   xmlns:mx="library://ns.adobe.com/flex/halo" xmlns:local="*" xmlns:view="view.*">
	<fx:Script>
		<![CDATA[
			import flash.geom.Rectangle;
			import flash.utils.ByteArray;
			
			import mx.controls.Alert;
			import mx.controls.HTML;
			import mx.events.FlexEvent;
			
			import org.alivepdf.images.ResizeMode;
			import org.alivepdf.pdf.PDF;
			import org.alivepdf.saving.Method;
			
			import cc.varga.utils.*;
			
			private var alchemyEncoder : Object = AlchemyJPEG.instance().encoder;
			private var byteArrayFromOriginalFile:*;
			private var outputByteArray: ByteArray = new ByteArray();
			
			[Bindable]
			private static var hScrollPolicy : String = "off";
			[Bindable]
			private static var vScrollPolicy : String = "off";
			
			private static const USERAGENT : String = "Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1A543a Safari/419.3"
			private static const START_URL : String = 'https://wave.google.com/wave/?nouacheck';
			
			protected function windowedapplication1_creationCompleteHandler(event:FlexEvent):void
			{
				
				htmlContainer.htmlOverview.htmlLoader.cacheResponse = false;
				htmlContainer.htmlOverview.htmlLoader.useCache = true;
				
			}
			
			protected function button1_clickHandler(htmlOverview:HTML):void
			{
				
				try{
					
					trace("Create Snapshot: " + htmlOverview.contentWidth + " || " + htmlOverview.contentHeight);
					
					outputByteArray = new ByteArray();
					
					/* var imageSnap:ImageSnapshot = ImageSnapshot.captureImage(source);
					var imageByteArray:ByteArray = imageSnap.data as ByteArray;
					imageByteArray.position = 0; */
					
					var bd:BitmapData = new BitmapData(htmlOverview.contentWidth,htmlOverview.contentHeight);
					
					bd.draw(htmlOverview);
					
					var rect : Rectangle = new Rectangle(htmlOverview.x, htmlOverview.y, htmlOverview.contentWidth,htmlOverview.contentHeight);
					var origBa : ByteArray = bd.getPixels( rect );
					origBa.position = 0;  
					
					alchemyEncoder.encodeAsync( compressFinished, origBa, outputByteArray, htmlOverview.contentWidth, htmlOverview.contentHeight, 100);
					
				} catch(errors:Error){
					
					Alert.show("PDF konnte nicht erstellt werden. Bitte installieren Sie das Programm neu oder kontaktieren Sie mich.", "#Error " + errors.errorID, 4, this);
					
				}				
				
			}
			
			private function compressFinished(img:ByteArray):void
			{
				
				var myPDF : PDF = new PDF();
				
				//var customSize:Size = new Size (  [htmlOverview.contentHeight, htmlOverview.contentWidth], "CustomSize", [(htmlOverview.contentHeight/200), (htmlOverview.contentWidth/200)], [((htmlOverview.contentHeight/200)*254), ((htmlOverview.contentWidth/200)*254)]  );
				//var page:Page = new Page ( Orientation.PORTRAIT, Unit.POINT, Size.A4 );
				myPDF.addPage();
				//myPDF.addImageStream(img,0,0,htmlOverview.contentWidth, htmlOverview.contentHeight, 1, ResizeMode.FIT_TO_PAGE);
				//myPDF.addImage(htmlOverview,0,0,0,0, "PNG", 100, 1, ResizeMode.FIT_TO_PAGE);
				myPDF.addImageStream(img,0,0,0,0, 1, ResizeMode.FIT_TO_PAGE);
				var exportPDF : ByteArray = myPDF.save(Method.LOCAL);
				var pdfFile : File = File.desktopDirectory.resolvePath("Wave Export/" + getDateAsString() + "_" + (Math.random()*10000).toFixed(0) + ".pdf");
				var fileStream : FileStream = new FileStream();
				fileStream.open(pdfFile, FileMode.WRITE);
				fileStream.writeBytes(exportPDF);
				fileStream.close();
				
				Alert.show("PDF Export to: [Ur Desktop/WaveExport]", "Finish");
				
				//vScrollPolicy = "on";
				//hScrollPolicy = "on";
				//changeScrollPolicy("auto");
			}
			
			private function getDateAsString():String{
				var currentDate : Date = new Date();
				//trace( String(currentDate.getFullYear() + "" + currentDate.getMonth() + "" + currentDate.getDate() ));
				return String(currentDate.getFullYear() + "" + uint(currentDate.getMonth()+1) + "" + currentDate.getDate());
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<!--	<fx:Binding source="hScrollPolicy" destination="htmlOverview.horizontalScrollPolicy" />
	<fx:Binding source="vScrollPolicy" destination="htmlOverview.verticalScrollPolicy" />-->
	
	<mx:ApplicationControlBar dock="true" left="0" top="0" right="0" width="100%">
		<!--		<s:Button id="backBtn" label="Back" height="33" click="backBtn_clickHandler(event)" />
		<s:Button id="forwardBtn" label="Forward" height="33" click="forwardBtn_clickHandler(event)" />	
		<s:Button label="Refresh" height="33" click="refreshLocation()"/>-->
		<s:Button label="Export to PDF" left="0" top="0" right="0" height="33" enabled="true" click="button1_clickHandler(htmlContainer.htmlOverview)"/>
	</mx:ApplicationControlBar>		
	
	<view:HTMLViewer id="htmlContainer" startURL="{START_URL}" userAgent="{USERAGENT}" left="0" bottom="0" right="0" top="55" horizontalScrollPolicy="off"/>

</s:WindowedApplication>
